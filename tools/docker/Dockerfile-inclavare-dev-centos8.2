FROM centos:8.2.2004

LABEL maintainer="Shirong Hao <shirong@linux.alibaba.com>"

RUN dnf clean all && rm -r /var/cache/dnf && \
    dnf --enablerepo=PowerTools install -y \
      make gcc rpm-build protobuf-c autoconf libtool gcc-c++ cmake libarchive \
      wget git yum-utils file clang which vim \
      glibc-static \
      libseccomp-devel openssl-devel binutils-devel protobuf-c-devel

WORKDIR /root

RUN mkdir /root/gopath

# install golang
RUN wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \
    tar -zxvf go1.14.2.linux-amd64.tar.gz -C /usr/lib && \
    rm -f go1.14.2.linux-amd64.tar.gz

# configure GOPATH and GOROOT
ENV GOROOT       /usr/lib/go
ENV GOPATH       /root/gopath
ENV PATH         $PATH:$GOROOT/bin:$GOPATH/bin
ENV GO111MODULE  on

# install rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path
ENV PATH         /root/.cargo/bin:$PATH

# install LVI binutils for rats-tls build
RUN wget https://download.01.org/intel-sgx/sgx-linux/2.13.3/as.ld.objdump.gold.r3.tar.gz && \
     tar -zxvf as.ld.objdump.gold.r3.tar.gz && cp -rf external/toolset/centos8.2/* /usr/local/bin/ && \
     rm -rf external && rm -rf as.ld.objdump.gold.r3.tar.gz

# install docker
RUN dnf --enablerepo=PowerTools install -y iptables && \
    wget https://download.docker.com/linux/static/stable/x86_64/docker-19.03.8.tgz && \
    tar -zxvf docker-19.03.8.tgz && mv docker/* /usr/bin && rm -rf docker && rm -f docker-19.03.8.tgz

# configure the rune runtime of docker
RUN mkdir -p /etc/docker && \
    echo -e "{\n\t\"runtimes\": {\n\t\t\"rune\": {\n\t\t\t\"path\": \"/usr/local/bin/rune\",\n\t\t\t\"runtimeArgs\": []\n\t\t}\n\t}\n}" >> /etc/docker/daemon.json

# install Intel SGX SDK and DCAP
RUN [ ! -f sgx_linux_x64_sdk_2.13.100.4.bin ] && \
    wget -c https://download.01.org/intel-sgx/sgx-linux/2.13/distro/centos8.2-server/sgx_linux_x64_sdk_2.13.100.4.bin && \
    chmod +x sgx_linux_x64_sdk_2.13.100.4.bin && echo -e 'no\n/opt/intel\n' | ./sgx_linux_x64_sdk_2.13.100.4.bin && \
    rm -f sgx_linux_x64_sdk_2.13.100.4.bin

RUN [ ! -f sgx_rpm_local_repo.tgz ] && \
    wget -c https://download.01.org/intel-sgx/sgx-linux/2.13/distro/centos8.2-server/sgx_rpm_local_repo.tgz && \
    tar xzf sgx_rpm_local_repo.tgz && \
    yum-config-manager --add-repo sgx_rpm_local_repo && \
    yum makecache && rm -f sgx_rpm_local_repo.tgz

RUN yum install --nogpgcheck -y \
    libsgx-uae-service libsgx-dcap-default-qpl \
    libsgx-dcap-quote-verify-devel libsgx-dcap-ql-devel
